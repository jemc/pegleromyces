
Parser < BasicObject {
  
  var grammar: Grammar { }
  var string: ""
  
  var result: null
  
  memoize sequence: |constructable|
    constructable.construct.sequence + [[:end]]
  
  new_machine: Machine.new(
    sequence: sequence(grammar.rules.root)
    subject: string.each_char.map(&:ord)
  )
  
  new_processor: Processor.new(
    builder: new_builder
    string: string
  )
  
  new_builder: Builder.new
  
  parse: |string=null| {
    string && (self.string = string)
    machine = new_machine
    
    machine.execute
    
    unless(machine.had_failure) {
      processor = new_processor
      processor.capture_tokens = machine.captures
      self.result = processor.process
    }
    
    self
  }
}
